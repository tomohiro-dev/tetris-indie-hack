volumes:
  php-fpm-socket:
  db-store:
  psysh-store:
  pma-session-store:

networks:
  app-network:
    driver: bridge

services:
  pma:
    image: phpmyadmin/phpmyadmin:latest
    platform: linux/amd64
    environment:
      PMA_HOST: db
      PMA_USER: "${PMA_USER:-tomo_dev}"
      PMA_PASSWORD: "${PMA_PASS:-swole_code}"
    ports:
      - 8080:80
    volumes:
      - pma-session-store:/sessions
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app-network
    volumes:
      - type: volume
        source: php-fpm-socket
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./backend
        target: /workspace/backend
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: "${DB_NAME:-laravel_local}"
      DB_USERNAME: "${DB_USER:-tomo_dev}"
      DB_PASSWORD: "${DB_PASS:-swole_code}"

  db:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    ports:
      - target: 3306
        published: ${DB_PORT:-3306}
        # published: 3306
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      MYSQL_DATABASE: "${DB_NAME:-laravel_local}"
      MYSQL_USER: "${DB_USER:-tomo_dev}"
      MYSQL_PASSWORD: "${DB_PASS:-swole_code}"
      MYSQL_ROOT_PASSWORD: "${DB_PASS:-swole_code}"
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - target: 80
        published: ${WEB_PORT:-80}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: php-fpm-socket
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./backend
        target: /workspace/backend
  
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend-docker/Dockerfile
    ports: 
      - "30000:3000"
    volumes:
      - ./frontend:/workspace/frontend
    working_dir: /workspace/frontend
    command: npm run dev
    networks:
      - app-network